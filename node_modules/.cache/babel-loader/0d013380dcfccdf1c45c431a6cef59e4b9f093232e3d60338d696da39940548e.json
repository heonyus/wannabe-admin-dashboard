{"ast":null,"code":"var _jsxFileName = \"/Users/lhe339/Desktop/Wannabe/wannabe-admin-dashboard/src/pages/InfluencerPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport RealTimeActivity from '../components/RealTimeActivity';\nimport ActivityGraph from '../components/ActivityGraph';\nimport PopularKeywords from '../components/PopularKeywords';\nimport ChatChatPosts from '../components/ChatChatPosts';\nimport UserInteractions from '../components/UserInteractions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InfluencerPage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [influencerData, setInfluencerData] = useState(null);\n  useEffect(() => {\n    // 여기서 인플루언서 데이터를 가져오는 API 호출을 수행합니다.\n    // 예시:\n    const fetchData = async () => {\n      // const data = await fetchInfluencerData(id);\n      // setInfluencerData(data);\n      setInfluencerData({\n        name: 'Sample Influencer'\n      }); // 임시 데이터\n    };\n    fetchData();\n  }, [id]);\n  if (!influencerData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"influencer-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"\\uC778\\uD50C\\uB8E8\\uC5B8\\uC11C \\uB300\\uC2DC\\uBCF4\\uB4DC: \", influencerData.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-grid\",\n      children: [/*#__PURE__*/_jsxDEV(RealTimeActivity, {\n        influencerId: id || ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ActivityGraph, {\n        influencerId: id || ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PopularKeywords, {\n        influencerId: id || ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatChatPosts, {\n        influencerId: id || ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UserInteractions, {\n        influencerId: id || ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(InfluencerPage, \"FIklqcRdGDih0KMHeEtS54VMuFM=\", false, function () {\n  return [useParams];\n});\n_c = InfluencerPage;\nexport default InfluencerPage;\nvar _c;\n$RefreshReg$(_c, \"InfluencerPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","RealTimeActivity","ActivityGraph","PopularKeywords","ChatChatPosts","UserInteractions","jsxDEV","_jsxDEV","InfluencerPage","_s","id","influencerData","setInfluencerData","fetchData","name","children","fileName","_jsxFileName","lineNumber","columnNumber","className","influencerId","_c","$RefreshReg$"],"sources":["/Users/lhe339/Desktop/Wannabe/wannabe-admin-dashboard/src/pages/InfluencerPage.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport RealTimeActivity from '../components/RealTimeActivity';\nimport ActivityGraph from '../components/ActivityGraph';\nimport PopularKeywords from '../components/PopularKeywords';\nimport ChatChatPosts from '../components/ChatChatPosts';\nimport UserInteractions from '../components/UserInteractions';\n\ninterface InfluencerData {\n  name: string;\n  // 다른 필요한 속성들을 여기에 추가하세요\n}\n\nconst InfluencerPage: React.FC = () => {\n  const { id } = useParams<{ id: string }>();\n  const [influencerData, setInfluencerData] = useState<InfluencerData | null>(null);\n\n  useEffect(() => {\n    // 여기서 인플루언서 데이터를 가져오는 API 호출을 수행합니다.\n    // 예시:\n    const fetchData = async () => {\n      // const data = await fetchInfluencerData(id);\n      // setInfluencerData(data);\n      setInfluencerData({ name: 'Sample Influencer' }); // 임시 데이터\n    };\n    fetchData();\n  }, [id]);\n\n  if (!influencerData) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"influencer-page\">\n      <h1>인플루언서 대시보드: {influencerData.name}</h1>\n      <div className=\"dashboard-grid\">\n        <RealTimeActivity influencerId={id || ''} />\n        <ActivityGraph influencerId={id || ''} />\n        <PopularKeywords influencerId={id || ''} />\n        <ChatChatPosts influencerId={id || ''} />\n        <UserInteractions influencerId={id || ''} />\n      </div>\n    </div>\n  );\n};\n\nexport default InfluencerPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,gBAAgB,MAAM,gCAAgC;AAC7D,OAAOC,aAAa,MAAM,6BAA6B;AACvD,OAAOC,eAAe,MAAM,+BAA+B;AAC3D,OAAOC,aAAa,MAAM,6BAA6B;AACvD,OAAOC,gBAAgB,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO9D,MAAMC,cAAwB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrC,MAAM;IAAEC;EAAG,CAAC,GAAGV,SAAS,CAAiB,CAAC;EAC1C,MAAM,CAACW,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAwB,IAAI,CAAC;EAEjFD,SAAS,CAAC,MAAM;IACd;IACA;IACA,MAAMe,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B;MACA;MACAD,iBAAiB,CAAC;QAAEE,IAAI,EAAE;MAAoB,CAAC,CAAC,CAAC,CAAC;IACpD,CAAC;IACDD,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACH,EAAE,CAAC,CAAC;EAER,IAAI,CAACC,cAAc,EAAE;IACnB,oBAAOJ,OAAA;MAAAQ,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,oBACEZ,OAAA;IAAKa,SAAS,EAAC,iBAAiB;IAAAL,QAAA,gBAC9BR,OAAA;MAAAQ,QAAA,GAAI,2DAAY,EAACJ,cAAc,CAACG,IAAI;IAAA;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC1CZ,OAAA;MAAKa,SAAS,EAAC,gBAAgB;MAAAL,QAAA,gBAC7BR,OAAA,CAACN,gBAAgB;QAACoB,YAAY,EAAEX,EAAE,IAAI;MAAG;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC5CZ,OAAA,CAACL,aAAa;QAACmB,YAAY,EAAEX,EAAE,IAAI;MAAG;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzCZ,OAAA,CAACJ,eAAe;QAACkB,YAAY,EAAEX,EAAE,IAAI;MAAG;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC3CZ,OAAA,CAACH,aAAa;QAACiB,YAAY,EAAEX,EAAE,IAAI;MAAG;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzCZ,OAAA,CAACF,gBAAgB;QAACgB,YAAY,EAAEX,EAAE,IAAI;MAAG;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACV,EAAA,CA/BID,cAAwB;EAAA,QACbR,SAAS;AAAA;AAAAsB,EAAA,GADpBd,cAAwB;AAiC9B,eAAeA,cAAc;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}